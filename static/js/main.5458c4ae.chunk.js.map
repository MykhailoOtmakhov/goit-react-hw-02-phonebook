{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactsItem/ContactsItem.js","components/Contacts/Contacts.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js","components/ContactsItem/ContactsItem.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","nameInputId","uuidv4","numberInputId","handleInputChange","evt","currentTarget","value","setState","handleSubmit","preventDefault","console","log","props","onAddContact","reset","onSubmit","this","className","styles","label","htmlFor","input","type","onChange","id","button","onClick","Component","ContactsItem","onRemove","item","Contacts","contacts","onRemoveContact","map","Filter","App","filter","addContact","contact","find","alert","prevState","removeContact","contactId","changeFilter","e","formSubmitHandler","data","getVisibleContacts","normalizedFilter","toLowerCase","includes","visibleContacts","length","defaultProps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5458c4ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__1-rSf\",\"input\":\"ContactForm_input__2egwF\",\"button\":\"ContactForm_button__pYOzh\"};","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from './ContactForm.module.css'\r\n\r\n// import PropTypes from 'prop-types'\r\n\r\nexport default class ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    }\r\n\r\n    nameInputId = uuidv4();\r\n    numberInputId = uuidv4();\r\n\r\n    handleInputChange=evt=>{\r\n      const {name, value}= evt.currentTarget;\r\n      this.setState({\r\n        [name]: value,\r\n      })\r\n    }\r\n\r\n    handleSubmit=evt=>{\r\n        evt.preventDefault();\r\n        console.log(this.state);\r\n        this.props.onAddContact(this.state);\r\n        this.reset()\r\n    }\r\n\r\n    reset=()=>{\r\n        this.setState({name: '', number: '',});\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                  <label \r\n                    className={styles.label}\r\n                    htmlFor={this.nameInputId}>\r\n                        Name\r\n                    <input \r\n                      className={styles.input}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      value={this.state.name}\r\n                      onChange={this.handleInputChange}\r\n                      id={this.nameInputId}\r\n                    />\r\n                  </label>\r\n                  <label \r\n                  className={styles.label}\r\n                  htmlFor={this.numberInputId}>\r\n                      Number\r\n                    <input \r\n                      className={styles.input}\r\n                      type=\"tel\"\r\n                      name=\"number\"\r\n                      value={this.state.number}\r\n                      onChange={this.handleInputChange}\r\n                      id={this.numberInputId}\r\n                    />\r\n                  </label>\r\n                  <button \r\n                    className={styles.button}\r\n                    type=\"submit\" \r\n                    onClick={this.handleSubmit}\r\n                  >\r\n                    Add contact\r\n                  </button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport styles from './ContactsItem.module.css'\r\n\r\nconst ContactsItem = ({name, number, onRemove})=>(\r\n    <li className={styles.item}>\r\n        <p \r\n        className={styles.name}>\r\n            {name}-{number}</p>\r\n        <button \r\n            className={styles.button}\r\n            onClick={onRemove}> \r\n            Delete\r\n        </button>\r\n    </li>\r\n ) ;\r\nexport default ContactsItem;\r\n    \r\n","import React from 'react';\r\nimport ContactsItem from '../ContactsItem/ContactsItem'\r\n\r\nfunction Contacts ({contacts,onRemoveContact}){\r\n    return(\r\n        <div>\r\n            <ul>\r\n                {contacts.map(({id,name,number})=>(\r\n                    <ContactsItem \r\n                        key={id}\r\n                        name={name}\r\n                        number={number}\r\n                        onRemove={()=>onRemoveContact(id)}\r\n                    />\r\n                ))}\r\n            </ul>                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport styles from './Filter.module.css'\r\n\r\nconst Filter =({value, onChange})=>{\r\n    return(\r\n        <label\r\n            className={styles.label}\r\n        >\r\n        Find contacts by name:\r\n            <input \r\n                className={styles.input}\r\n                type=\"text\"\r\n                name=\"filter\"\r\n                value={value}   \r\n                onChange={onChange} \r\n            />                    \r\n        </label>\r\n    )\r\n    \r\n}\r\n\r\nexport default Filter;\r\n    \r\n\r\n  \r\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Contacts from './components/Contacts/Contacts';\nimport Filter from './components/Filter/Filter';\nexport default class App extends Component {\n  static defaultProps = {}\n  state = {\n    contacts: [],\n    filter: '',\n  }\n\n\n  addContact=({name, number})=>{\n    const contact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n\n    if (this.state.contacts.find((item)=>item.name===name)) { \n      alert(`${name} is already in a contact`);\n   }else{\n    this.setState(prevState=>({\n      contacts: [contact, ...prevState.contacts],\n  }));\n};\n   }\n    \n\n  removeContact=contactId=>{\n    this.setState(prevState=>{\n      return{\n          contacts: prevState.contacts.filter(({id})=>\n          id !== contactId),\n      }\n    })      \n  }\n\n  changeFilter=e=>{\n    this.setState({filter: e.currentTarget.value})\n  }\n\n  formSubmitHandler=data=>{\n    console.log(data);\n  };\n\n  getVisibleContacts=()=>{\n    const{filter, contacts} = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact=>\n      contact.name.toLowerCase().includes(normalizedFilter),\n      );\n  };\n\n  render() {\n    const {contacts, filter}=this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return(\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm \n          onAddContact={this.addContact}\n        />\n        <h2>Contacts</h2>\n        {/* <p>Find contacts by name:</p> */}\n        <Filter \n          value={filter}\n          onChange={this.changeFilter}\n        />\n        {contacts.length > 0 && \n          <Contacts \n            contacts={visibleContacts}\n            onRemoveContact={this.removeContact} \n        /> }       \n      </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsItem_item__3f_Ij\",\"name\":\"ContactsItem_name__7bYNe\",\"button\":\"ContactsItem_button__3qqCc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2j6Rw\",\"input\":\"Filter_input__2hdMB\"};"],"sourceRoot":""}